# This workflow will check if the current version can be built and conforms in
# respect to defined formatting, linting standards and if all test cases are
# as expected.

name: Node.js CI

# When is the workflow executed:
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # This allows to manually trigger the workflow from the Actions tab ON GitHub
  workflow_dispatch:

# The following jobs are defined:
jobs:
  # The build job tries to built the api library and checks formatting, linting
  # and test results
  build:
    # Run the job on the latest Ubuntu runner
    runs-on: ubuntu-latest
    # Specify the node versions that should be checked
    strategy:
      matrix:
        node-version: [16.x]
    # The following steps should be sequentially executed:
    steps:
    # Checkout the current repository
    - uses: actions/checkout@v2
    # Activate the NodeJs plugin with the previously defined versions and cache it
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    # Install the exact dependencies specified in the package-lock.json file
    - name: Install dependencies
      run: npm ci
    # Build the osu beatmap information fetcher
    - name: Compile Typescript beatmap fetcher
      run: npm run build
    - name: Create compiled_beatmaps.json
      run: npm run start
      env:
        OSU_OAUTH_CLIENT_ID: ${{ secrets.OSU_OAUTH_CLIENT_ID }}
        OSU_OAUTH_CLIENT_SECRET: ${{ secrets.OSU_OAUTH_CLIENT_SECRET }}
    - name: Create website (1/2 handlebars)
      run: npm run handlebars
    - name: Create website (2/2 webpack)
      run: npm run webpack
    # Run tests/checks
    - name: Lint code for errors/warnings
      run: npm run lint
    - name: Check code for formatting errors
      run: npm run format
    - name: Temporarily save created "website" files
      uses: actions/upload-artifact@v2
      with:
        name: website-artifacts
        path: ./dist/website
        retention-days: 7

  deploy:
    needs:
    - build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Retrieve temporarily saved "website" files from the build job
      uses: actions/download-artifact@v2
      with:
        name: website-artifacts
        path: ./bin
    - name: Deploy to GitHub Pages
      uses: crazy-max/ghaction-github-pages@v2
      with:
        target_branch: gh-pages
        build_dir: ./bin
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
